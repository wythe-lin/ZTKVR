/*Pseudo Header*/
#define MSG_AUDIO_BASE              0x10000100
#define MSG_IMAGE_TASK_BASE         0x10000200
#define MSG_PPU_BASE             	0x10000300
#define MSG_SYSTEM_BASE             0x10000500
#define MSG_FILESRV_BASE            0x10000600
#define MSG_AUDIO_DAC_BASE          0x10000700
#define MSG_USER_TIMER_BASE			0x10000800
#define MSG_RETURN_STATUS_BASE		0x10000900
#define MSG_JPEG_HANDLE_BASE        0x20000300
#define MSG_ICONSHOW_BASE           0x20000100
#define MSG_AVISHOW_BASE			0x20000400
#define MSG_STARTUP_BASE			0x20000500
#define MSG_AVIENC_BASE				0x20000600

typedef enum
{
	MSG_AVI_TICKER = MSG_AVISHOW_BASE,
	MSG_AVI_AUDIO_END,
	MSG_AVI_MJPEG_END,
	MSG_AVI_DECODE_END,
	MSG_AVI_PARSE_HEADER,
	MSG_AVI_STATUS_CHECK,
	MSG_AVI_PLAY,
	MSG_AVI_STOP,
	MSG_AVI_PAUSE,
	MSG_AVI_RESUME,
	MSG_AVI_ERROR,
	MSG_AVI_PLUGOUT,
	MSG_AVI_DISPLAYSIZE_CHANGE,
	MSG_AVI_MAX,
	MSG_START_AVI_STOP,
	MSG_AVI_VOLUME_DOWN,
	MSG_AVI_VOLUME_UP

}MSG_AVI_ENUM;

typedef enum
{
	MSG_AVI_ENCODE_PACKER_START = MSG_AVIENC_BASE,
	MSG_AVI_ENCODE_PACKER_STOP,
	MSG_AVI_ENCODE_START_AUDIO_RECORD,
	MSG_AVI_ENCODE_STOP_AUDIO_RECORD,
	MSG_AVI_ENCODE_START_VIDEO_ENCODE,
	MSG_AVI_ENCODE_STOP_VIDEO_ENCODE,
	MSG_AVI_ENCODE_START_CSI,
	MSG_AVI_ENCODE_STOP_CSI,
	MSG_AVI_ENCODE_START_SCALER,
	MSG_AVI_ENCODE_STOP_SCALER,
	MSG_AVI_ENCODE_START,
	MSG_AVI_ENCODE_STOP,
	MSG_AVI_ENCODE_PAUSE,
	MSG_AVI_ENCODE_RESUME,
	MSG_AVI_ENCODE_CAPTURE_PICTURE,
	MSG_AVI_ENCODE_STORAGE_FULL,
	MSG_AVI_ENCODE_STORAGE_ERR,
	MSG_AVI_ENCODE_EXIT
}MSG_AVIENC_ENUM;

typedef enum
{
    MSG_AUD_PLAY=MSG_AUDIO_BASE,
    MSG_AUD_PLAY_BY_SPI,
    MSG_AUD_MIDI_PLAY,
    MSG_AUD_PAUSE,
    MSG_AUD_STOP,
    MSG_AUD_RESUME,
    MSG_AUD_AVI_PLAY,
    MSG_AUD_SET_MUTE,
    MSG_AUD_VOLUME_SET,
    MSG_AUD_DECODE_NEXT_FRAME,
    MSG_AUD_SPU_RESTART,
    MSG_AUD_PLAY_RES,
    MSG_AUD_PLAY_SPI_RES,
    MSG_AUD_STOP_RES,
    MSG_AUD_PAUSE_RES,
    MSG_AUD_RESUME_RES,
    MSG_AUD_MUTE_SET_RES,
    MSG_AUD_VOLUME_SET_RES,
    MSG_AUD_BG_PLAY_RES,
    MSG_AUD_BG_PLAY_SPI_RES,
    MSG_AUD_BG_STOP_RES,
    MSG_AUD_BG_PAUSE_RES,
    MSG_AUD_BG_RESUME_RES,
    MSG_AUD_START_SAMPLES_COUNT,
    MSG_AUD_PLAY_TIME_GET_START,
    MSG_AUD_PLAY_TIME_GET_END,
    MSG_AUD_PLAY_TIME_RES,
    MSG_AUD_REVERSE_SET,
    MSG_AUD_PLAY_SPEED_SET,
    MSG_AUD_MAX
} MSG_AUD_ENUM;

typedef enum
{
    MSG_ICON_DECODE=MSG_ICONSHOW_BASE,
    MSG_ICON_DECODE_ERR,
    MSG_ICON_AVI_DECODE,
    MSG_ICON_INSERT,
    MSG_ICON_CFG,
    MSG_ICON_HANDOVER,
    MSG_ICON_FLY_FILL,
    MSG_ICON_REMOVE,
    MSG_ICON_FS_WAIT,
    MSG_ICON_RING_BUF_UPDATE,
    MSG_ICON_RING_BUF_REG_TO_SPRITE_IMG,
    MSG_ICON_SLIDE_WIN_CFG,
    MSG_ICON_RUNTIME_DISPLAY,
    MSG_ICON_ERROR_SHOW,
    MSG_ICON_KEY_SELECT_MOTION,
    MSG_ICON_IMAGE_FS_SCAN,
    MSG_ICON_SW_TIMER_ISR,
    MSG_ICON_COVER_FLOW_STATE,
    MSG_ICON_MAX
} MSG_ICONSHOW_ENUM;

typedef enum
{
    MSG_MJPEG_DECODE_OK=MSG_JPEG_HANDLE_BASE,
    MSG_MJPEG_DECODE_FAIL,
    MSG_MJPEG_DECODE_STATUS,
    MSG_JPEG_DECODE_MAX
} MSG_MJPEG_DECODE_ENUM;

typedef enum
{
	// Request
    MSG_IMAGE_PARSE_HEADER_REQ = MSG_IMAGE_TASK_BASE,
    MSG_IMAGE_DECODE_REQ,
    MSG_IMAGE_DECODE_EXT_REQ,
    MSG_IMAGE_SCALE_REQ,
    MSG_MJPEG_PARSE_HEADER_REQ,
    MSG_MJPEG_DECODE,
    MSG_MJPEG_DECODE_1,
    MSG_IMAGE_STOP_REQ,
    MSG_IMAGE_REQUEST_MAX,
	// Reply
	MSG_IMAGE_PARSE_HEADER_REPLY,
	MSG_IMAGE_DECODE_REPLY,
	MSG_IMAGE_DECODE_EXT_REPLY,
	MSG_IMAGE_SCALE_REPLY,
	MSG_MJPEG_PARSE_HEADER_REPLY,
    MSG_IMAGE_STOP_REPLY,
	MSG_IMAGE_REPLY_MAX
} MSG_IMAGE_TASK_ENUM;

typedef enum
{
    MSG_SYS_AD_KEY=MSG_SYSTEM_BASE,
    MSG_SYS_UART_KEY,
    MSG_SYS_IR_KEY,
    MSG_SYS_ITOUCH_KEY,
    MSG_SYS_KEY_POWER,
    MSG_SYS_LOW_BATTERY,
    MSG_SYS_RTC,
    MSG_SYS_ALARM,
    MSG_SYS_HALT,
    MSG_SYS_CARD_PLUG_CHANGE,
    MSG_SYS_QUERY_CARD_EXIST,
    MSG_SYS_STORAGE_SCAN_START,
    MSG_SYS_STORAGE_SCAN_DONE,
    MSG_SYS_ERROR,
    MSG_SYS_USBD_PLUG_CHANGE,
    MSG_SYS_NAUGHTY_EVENT,
    MSG_SYS_USBD,
    MSG_SYS_USBH,
    MSG_SYS_ADAPTER_PLUG,
    MSG_SYS_BATTERY_CHECK,
    MSG_SYS_MAX
} MSG_SYS_ENUM;


typedef enum
{
    MSG_FILESRV_FS_READ=MSG_FILESRV_BASE,
    MSG_FILESRV_NVRAM_AUDIO_GPRS_READ,
    MSG_FILESRV_NVRAM_AUDIO_APP_READ,
    MSG_FILESRV_NVRAM_AUDIO_APP_PACKED_READ,
    MSG_FILESRV_NVRAM_READ,
    MSG_FILESRV_NVRAM_AUDIO_READ,	// added by Bruce, 2009/02/19
    MSG_FILESRV_SPI_L1_READ,
    MSG_FILESRV_SPI_L3_READ,
    MSG_FILESRV_FLUSH,
    MSG_FILESRV_FLUSH_DONE,
    MSG_FILESRV_SCAN,
    MSG_FILESRV_SCAN_CONTINUE,
    MSG_FILESRV_MOUNT,
    MSG_FILESRV_SORTING,
    MSG_FILESRV_DEL,     /*RFU*/
    MSG_FILESRV_COPY,    /*RFU*/
    MSG_FILESRV_MOVE,    /*RFU*/
    MSG_FILESRV_RENAME,  /*RFU*/
    MSG_FILESRV_OPEN,    /*RFU*/
    MSG_FILESRV_CLOSE,   /*RFU*/
    MSG_FILESRV_AVIAUDIO_FS_READ,  /*avi use only */
    MSG_FILESRV_AVIVIDEO_FS_READ,  /*avi use only */
    MSG_FILESRV_USER_DEFINE_READ,	// added by Bruce, 2008/10/27
    MSG_FILESRV_TASK_READY,
    MSG_FILESRV_MAX   /*RFU*/
} MSG_FILESRV_ENUM;

typedef enum
{
    MSG_AUD_DMA_DBF_START=MSG_AUDIO_DAC_BASE,
    MSG_AUD_DMA_DBF_DONE,
    MSG_AUD_DMA_DBF_RESTART,
    MSG_AUD_DMA_WIDX_CLEAR,
    MSG_AUD_STOP_SMOOTH_START,
    MSG_AUD_RAMP_DOWN_START,
    MSG_AUD_SPU_WIDX_CLEAR,
    MSG_AUD_SPU_WIDX_SET,
    MSG_AUD_SPU_SOFTCH_START,
    MSG_AUD_SPU_LEFT_DONE,
    MSG_AUD_SPU_RIGHT_DONE,
    MSG_AUD_DMA_PAUSE,
    MSG_AUD_LOW_PRIORITY_SET,
    MSG_AUD_DAC_STOP,
    MSG_AUD_DAC_REVRESE,
    MSG_AUD_DAC_REVRESE_CLEAR,
    MSG_AUD_DAC_MAX
} MSG_AUD_DAC_ENUM;

typedef enum
{
    MSG_USER_TIMER0=MSG_USER_TIMER_BASE,
    MSG_USER_TIMER1,
    MSG_USER_TIMER2,
    MSG_USER_TIMER3,
    MSG_USER_TIMER4,
    MSG_USER_TIMER_MAX
} MSG_USER_TIMER_ENUM;

typedef enum
{
	MSG_SLIDE_SHOW_NEXT_TICK = MSG_RETURN_STATUS_BASE,
	MSG_RETURN_STATUS_MAX
} MSG_RETURN_STATUS_ENUM;

//avi encode
typedef enum
{
	MSG_AVI_START_SENSOR = 0x1000,
	MSG_AVI_STOP_SENSOR,
	MSG_AVI_START_ENCODE,
	MSG_AVI_STOP_ENCODE,
	MSG_AVI_RESUME_ENCODE,
	MSG_AVI_PAUSE_ENCODE,
	MSG_AVI_CAPTURE_PICTURE,
	MSG_AVI_STORAGE_FULL,
	MSG_AVI_STORAGE_ERR,
	MSG_AVI_ENCODE_STATE_EXIT,
	MSG_AVI_ONE_FRAME_ENCODE,
	MSG_AVI_MOTION_DETECTION_INIT,
	MSG_AVI_MOTION_DETECTION_EXIT,
	MSG_AVI_START_MOTION_DETECTION,
	MSG_AVI_STOP_MOTION_DETECTION,
	MSG_AVI_CHECK_MOTION_DETECTION,
	MSG_AVI_START_USB_WEBCAM,
	MSG_AVI_STOP_USB_WEBCAM
}AVI_ENCODE_STATE_ENUM;

//scaler message
typedef enum
{
	MSG_SCALER_TASK_INIT = 0x1000000,
	MSG_SCALER_TASK_PREVIEW_ON = 0x2000000,
	MSG_SCALER_TASK_PREVIEW_OFF = 0x3000000,
	MSG_SCALER_TASK_PREVIEW_LOCK = 0x4000000,
	MSG_SCALER_TASK_PREVIEW_UNLOCK = 0x5000000,
	MSG_SCALER_TASK_STOP = 0x6000000,
	MSG_SCALER_TASK_EXIT = 0x7000000,
	MSG_SCALER_TASK_ALLOCATE = 0x8000000,
	MSG_SCALER_TASK_FREE = 0x9000000,
	MSG_SCALER_TASK_PACKER_ALLOCATE = 0xA000000,
	MSG_SCALER_TASK_PACKER_FREE = 0xB000000,
	MSG_SCALER_TASK_UPDATE_DISP_MODE = 0xC000000
}AVI_ENCODE_SCALER_ENUM;

//video encode message
typedef enum
{
	MSG_VIDEO_ENCODE_TASK_MJPEG_INIT = 0x3000,
	MSG_VIDEO_ENCODE_TASK_MPEG4_INIT,
	MSG_VIDEO_ENCODE_TASK_STOP,
	MSG_VIDEO_ENCODE_TASK_EXIT
}AVI_ENCODE_VIDEO_ENUM;

typedef enum
{
	AVI_AUDIO_DMA_DONE = 1,//C_DMA_STATUS_DONE
	AVI_AUDIO_RECORD_START = 0x4000,
	AVI_AUDIO_RECORD_STOP,
	AVI_AUDIO_RECORD_STOPING,
	AVI_AUDIO_RECORD_RESTART,
	AVI_AUDIO_RECORD_EXIT
}AVI_ENCODE_AUDIO_ENUM;

typedef enum
{
	//AVI_DEL_FILE = 0x5000
	MSG_STORAGE_SERVICE_DEL = 0x5000,
	MSG_STORAGE_SERVICE_STORAGE_CHECK,
	MSG_STORAGE_SERVICE_FREESIZE_CHECK_SWITCH,
	MSG_STORAGE_SERVICE_FREESIZE_CHECK,
	MSG_STORAGE_SERVICE_FREE_FILESIZE_CHECK,
	MSG_STORAGE_SERVICE_VIDEO_FILE_DEL,
	MSG_STORAGE_SERVICE_AUTO_DEL_LOCK,
	MSG_STORAGE_SERVICE_TIMER_START,
	MSG_STORAGE_SERVICE_TIMER_STOP,
	MSG_STORAGE_SERVICE_TIMER_STOP_DONE,
	MSG_STORAGE_SERVICE_AUD_REQ,   // dominant add for audio record
	MSG_STORAGE_SERVICE_AUD_REPLY,	 // dominant add for audio record
	MSG_STORAGE_SERVICE_PIC_REQ,
	MSG_STORAGE_SERVICE_PIC_REPLY,
	MSG_STORAGE_SERVICE_VID_REQ,
	MSG_STORAGE_SERVICE_VID_REPLY,
	MSG_STORAGE_SERVICE_VID_CYCLIC_REQ,
	MSG_STORAGE_SERVICE_DEL_TABLE_ITEM, //wwj add
	MSG_STORAGE_SERVICE_VID_CYCLIC_REPLY,
	MSG_STORAGE_SERVICE_MOUNT,
	MSG_STORAGE_SERVICE_NO_STORAGE,
	MSG_STORAGE_SERVICE_FORMAT_REQ,
	MSG_STORAGE_SERVICE_FORMAT_REPLY,
	MSG_STORAGE_SERVICE_BROWSE_REQ,
	MSG_STORAGE_SERVICE_BROWSE_REPLY,
	MSG_STORAGE_SERVICE_THUMBNAIL_REQ,
	MSG_STORAGE_SERVICE_THUMBNAIL_REPLY,
	MSG_STORAGE_USBD_EXIT,
	MSG_STORAGE_USBD_PCAM_EXIT,
	MSG_STORAGE_SERVICE_FILE_DEL_ALL,
	MSG_STORAGE_SERVICE_LOCK_ONE,
	MSG_STORAGE_SERVICE_LOCK_ALL,
	MSG_STORAGE_SERVICE_UNLOCK_ONE,
	MSG_STORAGE_SERVICE_UNLOCK_ALL		
}TASK_STORAGE_SERVICE_ENUM;

typedef enum
{
	MSG_PERIPHERAL_TASK_KEY_DETECT = 0x6000,
	MSG_PERIPHERAL_TASK_KEY_REGISTER,
	MSG_PERIPHERAL_TASK_AD_DETECT_CHECK,
	MSG_PERIPHERAL_TASK_BAT_STS_REQ,
	MSG_PERIPHERAL_TASK_MOTION_DETECT_START,
	MSG_PERIPHERAL_TASK_MOTION_DETECT_STOP,
	MSG_PERIPHERAL_TASK_MOTION_DETECT_JUDGE,
	MSG_PERIPHERAL_TASK_LCD_BACKLIGHT_SET,
	MSG_PERIPHERAL_TASK_LED_SET,
	MSG_PERIPHERAL_TASK_LED_FLASH_SET,	//wwj add
	MSG_PERIPHERAL_TASK_LED_BLINK_SET,	//wwj add
	MSG_PERIPHERAL_TASK_ZOOM_FLAG,
	MSG_PERIPHERAL_TASK_TEST,
	MSG_PERIPHERAL_TASK_STATE_ID,
	MSG_PERIPHERAL_TASK_IR_KEY,
	MSG_PERIPHERAL_USBD_EXIT,
	MSG_PERIPHERAL_TASK_SCREEN_SAVER_ENABLE,
	MSG_PERIPHERAL_TASK_NIGHT_MODE_SET,	//wwj add
	MSG_PERIPHERAL_TASK_TV_DETECT,
	MSG_PERIPHERAL_TASK_LIGHT_DETECT
}TASK_PERIPHERAL_ENUM;

typedef enum
{
	MSG_APQ_MODE = 0x7000,
	MSG_APQ_DISPLAY_TASK_READY,
	MSG_APQ_FUNCTION_KEY_ACTIVE,
	MSG_APQ_NEXT_KEY_ACTIVE,
	MSG_APQ_PREV_KEY_ACTIVE,
	MSG_APQ_POWER_KEY_ACTIVE,
	MSG_APQ_MENU_KEY_ACTIVE,
	MSG_APQ_AVI_PACKER_ERROR,
	MSG_APQ_CYCLIC_VIDEO_RECORD,
	MSG_APQ_VID_CYCLIC_FILE_DEL_REPLY,
	MSG_APQ_VIDEO_FILE_DEL_REPLY,
	MSG_APQ_SELECT_FILE_DEL_REPLY,
	MSG_APQ_MOTION_DETECT_ACTIVE,
	MSG_APQ_MOTION_DETECT_TICK,
	MSG_APQ_MOTION_DETECT_TICK_END,
	MSG_APQ_MOTION_DETECT_ICON_UPDATE,
	MSG_APQ_CONNECT_TO_PC,
	MSG_APQ_DISCONNECT_TO_PC,
	MSG_APQ_BATTERY_LVL_SHOW,
	MSG_APQ_KEY_IDLE,
	MSG_APQ_NIGHT_MODE_KEY,		//wwj add
	MSG_APQ_AUDIO_ENCODE_ERR,	//wwj add
	MSG_APQ_MJPEG_DECODE_END,
	MSG_APQ_SCROLL_BAR_END,
	MSG_APQ_PREVIEW_EFFECT_END,
	MSG_APQ_INIT_THUMBNAIL,
	MSG_APQ_UPDATE_MP3_TOTAL_INDEX,
	MSG_APQ_SENSOR_CLOCK_DISABLED,
	MSG_APQ_KEY_WAKE_UP,
	MSG_APQ_FREE_SIZE_CHECK_REPLY,
	MSG_APQ_FREE_FILESIZE_CHECK_REPLY,
	MSG_APQ_STORAGE_SCAN_DONE,
	MSG_APQ_FREE_PACKER_MEM_DONE,
	MSG_APQ_USER_CONFIG_STORE,
	MSG_APQ_BATTERY_CHARGED_SHOW,
	MSG_APQ_BATTERY_CHARGED_CLEAR,
	MSG_APQ_VDO_REC_STOP,
	MSG_APQ_VDO_REC_RESTART,
	MSG_APQ_RECORD_SWITCH_FILE,
	MSG_APQ_UVC_STILL_IMAGE_TRIGGER,
	MSG_APQ_AUDIO_EFFECT_MODE,
	MSG_APQ_AUDIO_EFFECT_OK,
	MSG_APQ_AUDIO_EFFECT_MENU,
	MSG_APQ_AUDIO_EFFECT_UP,
	MSG_APQ_AUDIO_EFFECT_DOWN,
	MSG_APQ_DISPLAY_DRAW_TIMER,
	MSG_APQ_FILE_DEL_ALL_REPLY,
	MSG_APQ_FILE_LOCK_ONE_REPLY,
	MSG_APQ_FILE_LOCK_ALL_REPLY,
	MSG_APQ_FILE_UNLOCK_ONE_REPLY,
	MSG_APQ_FILE_UNLOCK_ALL_REPLY,
	MSG_APQ_FILE_LOCK_DURING_RECORDING,
	MSG_APQ_CAMSWITCH_ACTIVE		// add by xyz - 2014.11.14
}TASK_STATE_HANDLING_APQ_ENUM;

typedef enum
{
	MSG_USBD_PLUG_IN = 0x8000,
	MSG_USBD_PLUG_OUT,
	MSG_USBCAM_PLUG_IN,
	MSG_USBD_INITIAL
}TASK_USB_ENUM;

typedef enum
{
	MSG_DISPLAY_TASK_JPEG_DRAW				= 0x01000000,
	MSG_DISPLAY_TASK_MJPEG_DRAW				= 0x02000000,
	MSG_DISPLAY_TASK_SETTING_DRAW			= 0x03000000,
	MSG_DISPLAY_TASK_WAV_TIME_DRAW			= 0x04000000,
	MSG_DISPLAY_TASK_QUEUE_INIT				= 0x10000000,
	MSG_DISPLAY_TASK_PPU_READY				= 0x20000000,
	MSG_DISPLAY_TASK_ICON_SHOW				= 0x30000000,
	MSG_DISPLAY_TASK_ICON_CLEAR				= 0x31000000,
	MSG_DISPLAY_TASK_ICON_MOVE				= 0x32000000,
	MSG_DISPLAY_TASK_MD_ICON_SHOW           = 0x33000000,
	MSG_DISPLAY_TASK_PIC_EFFECT				= 0x40000000,
	MSG_DISPLAY_TASK_PIC_PREVIEW_EFFECT		= 0x41000000,
	MSG_DISPLAY_TASK_PIC_EFFECT_END			= 0x42000000,
	MSG_DISPLAY_TASK_STRING_DRAW			= 0x50000000,
	MSG_DISPLAY_TASK_LEFT_REC_TIME_DRAW		= 0x51000000,
	MSG_DISPLAY_TASK_LEFT_REC_TIME_CLEAR	= 0x52000000,
	MSG_DISPLAY_TASK_SETTING_INIT			= 0x60000000,
	MSG_DISPLAY_TASK_SETTING_EXIT			= 0x61000000,
	MSG_DISPLAY_TASK_MP3_INDEX_SHOW			= 0x70000000,
	MSG_DISPLAY_TASK_MP3_TOTAL_INDEX_SHOW	= 0x71000000,
	MSG_DISPLAY_TASK_MP3_ALL_INDEX_CLEAR	= 0x72000000,
	MSG_DISPLAY_TASK_MP3_VOLUME_SHOW		= 0x73000000,
	MSG_DISPLAY_TASK_MP3_FM_CHANNEL_SHOW	= 0x74000000,
	MSG_DISPLAY_TASK_MP3_INPUT_NUM_SHOW		= 0x75000000,
	MSG_DISPLAY_TASK_MP3_INPUT_NUM_CLEAR	= 0x76000000
	//MSG_DISPLAY_TASK_NO_STORAGE = 0x20000000,
	//MSG_DISPLAY_TASK_STORAGE_MOUNT = 0x30000000
}TASK_DISPLAY_ENUM;

enum {
	ICON_BATTERY_RED = 1,
	ICON_BATTERY_1,
	ICON_BATTERY_2,
	ICON_BATTERY_3,
	ICON_CAPTURE,
	ICON_VIDEO_RECORD,
	ICON_PLAYBACK,
	ICON_MOTION_DETECT,
	ICON_REC,
	ICON_PLAY,
	ICON_PAUSE,
	ICON_MIC_OFF,
	ICON_IR_ON,
	ICON_FOCUS,
	ICON_VIDEO,
	ICON_NO_SD_CARD,
	ICON_MOTION_DETECT_START,
	ICON_USB_CONNECT,
	ICON_SCROLL_BAR,
	ICON_SCROLL_BAR_IDX,
	ICON_MD_STS_0,
	ICON_MD_STS_1,
	ICON_MD_STS_2,
	ICON_MD_STS_3,
	ICON_MD_STS_4,
	ICON_MD_STS_5,
	ICON_MP3_PLAY,
	ICON_MP3_PAUSE,
	ICON_MP3_PLAY_ONE,
	ICON_MP3_PLAY_ALL,
	ICON_MP3_INDEX,
	ICON_MP3_VOLUME,
	ICON_MP3_MUTE,
	ICON_MP3_STOP,
	ICON_BATTERY_CHARGED,	//35
	ICON_LOCKED,
	ICON_VGA,
	ICON_NIGHT_MODE_ENABLED,
	ICON_NIGHT_MODE_DISABLED,
	ICON_AUDIO_RECORD, //wwj add
	ICOM_MAX_NUM
};

enum {
	NUM_TEXT_0,
	NUM_TEXT_1,
	NUM_TEXT_2,
	NUM_TEXT_3,
	NUM_TEXT_4,
	NUM_TEXT_5,
	NUM_TEXT_6,
	NUM_TEXT_7,
	NUM_TEXT_8,
	NUM_TEXT_9,
	NUM_TEXT_COLON,
	NUM_TEXT_SLASH,
	NUM_MAX
};

enum {
//=== Multi-language string item must be the first one, above this line. ===
	STR_MULTI_LANGUAGE,
	STR_VIDEO_OUTPUT,
	STR_CAPTURE,
	STR_PLAY,
	STR_SETUP,
	/*STR_EV*/STR_SIZE1,	//wwj modify
	STR_TIME_STAMP,
	STR_MOTIONDETECT,
	STR_VIDEO_TIME,
	/*STR_NIGHT_MODE, */
	STR_MIC_SWITCH,		//wwj modify
	STR_MD_SENSITIVITY,
	STR_WHITE_BALANCE,
	STR_P2_0,
	STR_P5_3,
	STR_P4_3,
	STR_P1_0,
	STR_P2_3,
	STR_P1_3,
	STR_P0_0,
	STR_N1_3,
	STR_N2_3,
	STR_N1_0,
	STR_N4_3,
	STR_N5_3,
	STR_N2_0,
	STR_AUTO,
	STR_DAYLIGHT,
	STR_CLOUDY,
	STR_TUNGSTEN,
	STR_FLUORESCENT,
	STR_OFF1,
	STR_DATE_ONLY,
	STR_DATE_TIME,
	STR_OFF,
	STR_ON,
	STR_OFF2,
	STR_1_MIN,
	STR_2_MIN,
	STR_3_MIN,
	STR_4_MIN,
	STR_5_MIN,
	STR_10_MIN,
	STR_15_MIN,
	STR_SIZE,
	STR_QUALITY,
//	STR_SCENE_MODE,
	STR_EV1,
	STR_ISO,
	STR_SATURATION,
	STR_SHARPNESS,
	STR_COLOR,
	STR_PREVIEW,
	STR_BURST,
	STR_WHITE_BALANCE1,
	STR_5M,
	STR_3M,
	STR_2M,
	STR_1_3M,
	STR_D_VGA,
	STR_L_VGA,
	STR_R_VGA,
	STR_VGA,
	STR_FINE,
	STR_STANDARD,
	STR_ECONOMY,
	STR_AUTO1,
	STR_SPORT,
	STR_NIGHT,
	STR_PORTRAIT,
	STR_LANDSCAPE,
	STR_BACKLIGHT,
	STR_AUTO2,
	STR_100,
	STR_200,
	STR_STANDARD1,
	STR_MONOCHROME,
	STR_VIVID,
	STR_SEPIA,
	STR_HIGH,
	STR_NORMAL,
	STR_LOW,
	STR_HARD,
	STR_NORMAL1,
	STR_SOFT,
	STR_DELETE_ONE,
	STR_DELETE_ALL,
	STR_LOCK_ONE,
	STR_LOCK_ALL,
	STR_UNLOCK_ONE,
	STR_UNLOCK_ALL,		
	STR_DELETE,
	STR_LOCK,
	STR_THUMBNAIL,
	STR_VOLUME,
	STR_NEXT_MENU,
	STR_SINGLE,
	STR_ALL,
	STR_SELECT,
	STR_FORMAT,
	STR_LANGUAGE,
	STR_AUTO_OFF,
	STR_SYS_RESET,
	STR_LIGHT_FREQ,
	STR_TV_OUTPUT,
	STR_DATE_INPUT,
	STR_USB,
	STR_CANCEL,
	STR_EXECUTE,
	STR_50HZ,
	STR_60HZ,
	STR_NTSC,
	STR_PAL,
	STR_SET,
	STR_PC_CAM,
	STR_DISK_DRIVE,
	STR_EXIT,
	STR_PLEASE_WAIT,
	STR_NO_SD,
	STR_SD_FULL,
	STR_NO_MEDIA,
	STR_VOLUME_0,
	STR_VOLUME_1,
	STR_VOLUME_2,
	STR_VOLUME_3,
	STR_VOLUME_4,
	STR_VOLUME_5,
	STR_VOLUME_6,
	STR_VOLUME_7,
	STR_VOLUME_8,
	STR_APP_VERSION,
	STR_MAX
};